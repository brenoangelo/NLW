{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { database } from \"../services/firebase\";\nexport function useRoom(roomId) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState();\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.questions) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighLighted: value.isHighLighted,\n          isAnswered: value.isAnswered\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n    });\n  }, [roomId]);\n  return {\n    questions,\n    title\n  };\n}\n\n_s(useRoom, \"w/H5CtINzY2519t0pbWAKfU2LAk=\");","map":{"version":3,"sources":["/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","database","useRoom","roomId","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighLighted","isAnswered"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAuBA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAgC;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAiB,EAAjB,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,OAAO,GAAGP,QAAQ,CAACQ,GAAT,CAAc,SAAQN,MAAO,EAA7B,CAAhB;AAEAK,IAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBC,IAAI,IAAI;AAAA;;AACvB,YAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,EAArB;AACA,YAAMC,iBAAoC,4BAAGF,YAAY,CAACR,SAAhB,yEAA6B,EAAvE;AAEA,YAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAC5E,eAAO;AACHC,UAAAA,EAAE,EAAEF,GADD;AAEHG,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAFZ;AAGHC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAHX;AAIHC,UAAAA,aAAa,EAAEJ,KAAK,CAACI,aAJlB;AAKHC,UAAAA,UAAU,EAAEL,KAAK,CAACK;AALf,SAAP;AAOH,OARuB,CAAxB;AAUAlB,MAAAA,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR;AACAD,MAAAA,YAAY,CAACU,eAAD,CAAZ;AAEJ,KAjBD;AAkBF,GArBO,EAqBN,CAACZ,MAAD,CArBM,CAAT;AAuBC,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACJ;;GA5BeJ,O","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { database } from \"../services/firebase\"\n\ntype FirebaseQuestions = Record<string, {\n    author: {\n        name: string;\n       avatar: string;\n    },\n    content: string;\n    isAnswered: boolean;\n    isHighLighted: boolean; \n}>\n\ntype QuestionType = {\n    id: string;\n    author: {\n        name: string;\n       avatar: string;\n    },\n    content: string;\n    isAnswered: boolean;\n    isHighLighted: boolean; \n}\n\nexport function useRoom(roomId: string){\n    const [questions, setQuestions] = useState<QuestionType[]>([])\n    const [title, setTitle] = useState()\n\n    useEffect(()=>{\n        const roomRef = database.ref(`rooms/${roomId}`) \n \n        roomRef.on('value', room => {\n             const databaseRoom = room.val();\n             const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {}; \n \n             const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n                 return {\n                     id: key,\n                     content: value.content,\n                     author: value.author,\n                     isHighLighted: value.isHighLighted,\n                     isAnswered: value.isAnswered,\n                 }\n             })\n             \n             setTitle(databaseRoom.title)\n             setQuestions(parsedQuestions)\n            \n        })\n     },[roomId])\n\n     return { questions, title }\n}"]},"metadata":{},"sourceType":"module"}