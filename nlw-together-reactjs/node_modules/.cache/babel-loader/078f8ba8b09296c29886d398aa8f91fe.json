{"ast":null,"code":"var _jsxFileName = \"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { database } from '../services/firebase';\nimport { useHistory, useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport '../styles/room.scss';\nimport { Question } from '../components/Question/index';\nimport { useRoom } from '../hooks/useRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const { user } = useAuth()\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que você deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Remover pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoom, \"jzegP1eYD/Dzuxb8KiHa++znXtE=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/AdminRoom.tsx"],"names":["database","useHistory","useParams","Button","RoomCode","Question","useRoom","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","logoImg","length","map","question","content","author","deleteImg"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAKA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAQA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB;AACA,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,MAAM,GAAGD,MAAM,CAACE,EAAtB;AAGA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBP,OAAO,CAACI,MAAD,CAApC;;AAEA,iBAAeI,aAAf,GAA+B;AAC3B,UAAMd,QAAQ,CAACe,GAAT,CAAc,SAAQL,MAAO,EAA7B,EAAgCM,MAAhC,CAAuC;AACzCC,MAAAA,OAAO,EAAE,IAAIC,IAAJ;AADgC,KAAvC,CAAN;AAIAV,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH;;AAED,iBAAeC,oBAAf,CAAoCC,UAApC,EAAwD;AACpD,QAAGC,MAAM,CAACC,OAAP,CAAe,oDAAf,CAAH,EAAwE;AACpE,YAAMvB,QAAQ,CAACe,GAAT,CAAc,SAAQL,MAAO,cAAaW,UAAW,EAArD,EAAwDG,MAAxD,EAAN;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEf;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,UAAU,MAAlB;AAAmB,YAAA,OAAO,EAAEI,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,8BAAUF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEMC,SAAS,CAACa,MAAV,GAAmB,CAAnB,iBAAwB;AAAA,qBAAQb,SAAS,CAACa,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKb,SAAS,CAACc,GAAV,CAAcC,QAAQ,IAAI;AACvB,8BACI,QAAC,QAAD;AAEI,YAAA,OAAO,EAAEA,QAAQ,CAACC,OAFtB;AAGI,YAAA,MAAM,EAAED,QAAQ,CAACE,MAHrB;AAAA,mCAKI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,OAAO,EAAE,MAAMV,oBAAoB,CAACQ,QAAQ,CAACjB,EAAV,CAFvC;AAAA,qCAII;AAAK,gBAAA,GAAG,EAAEoB,SAAV;AAAqB,gBAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AALJ,aACSH,QAAQ,CAACjB,EADlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAeH,SAhBA;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GAjEeJ,S;UAEIN,U,EACDC,S,EAIcI,O;;;KAPjBC,S","sourcesContent":["\nimport { database } from '../services/firebase';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\n\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\n\nimport '../styles/room.scss'\nimport { Question } from '../components/Question/index';\nimport { useRoom } from '../hooks/useRoom';\n\n\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function AdminRoom() {\n    //const { user } = useAuth()\n    const history = useHistory()\n    const params = useParams<RoomParams>()\n    const roomId = params.id\n\n\n    const { title, questions } = useRoom(roomId)\n\n    async function handleEndRoom() {\n        await database.ref(`rooms/${roomId}`).update({\n            endedAt: new Date()\n        })\n\n        history.push('/')\n    }\n    \n    async function handleDeleteQuestion(questionId: string) {\n        if(window.confirm('Tem certeza que você deseja excluir essa pergunta?')){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n        }\n    }\n\n    return (\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutlined onClick={handleEndRoom}>Encerrar sala</Button>\n                    </div>\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    { questions.length > 0 && <span>{ questions.length } pergunta(s)</span> }\n                </div>\n\n                \n                <div className=\"question-list\">\n                    {questions.map(question => {\n                        return (\n                            <Question\n                                key={question.id} \n                                content={question.content} \n                                author={question.author}\n                            >\n                                <button\n                                    type=\"button\"\n                                    onClick={() => handleDeleteQuestion(question.id)}\n                                >\n                                    <img src={deleteImg} alt=\"Remover pergunta\" />\n                                </button>\n                            </Question>\n                        \n                        )\n                    })}\n                </div>\n            </main>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}