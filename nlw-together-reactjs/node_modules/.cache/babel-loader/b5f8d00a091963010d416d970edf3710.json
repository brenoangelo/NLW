{"ast":null,"code":"import _regeneratorRuntime from\"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{database}from'../services/firebase';import{useHistory,useParams}from'react-router-dom';import logoImg from\"../assets/images/logo.svg\";import deleteImg from\"../assets/images/delete.svg\";import checkImg from\"../assets/images/check.svg\";import answerImg from\"../assets/images/answer.svg\";import{Button}from'../components/Button';import{RoomCode}from'../components/RoomCode';import'../styles/room.scss';import{Question}from'../components/Question/index';import{useRoom}from'../hooks/useRoom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function AdminRoom(){//const { user } = useAuth()\nvar history=useHistory();var params=useParams();var roomId=params.id;var _useRoom=useRoom(roomId),title=_useRoom.title,questions=_useRoom.questions;function handleEndRoom(){return _handleEndRoom.apply(this,arguments);}function _handleEndRoom(){_handleEndRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return database.ref(\"rooms/\".concat(roomId)).update({endedAt:new Date()});case 2:history.push('/');case 3:case\"end\":return _context.stop();}}},_callee);}));return _handleEndRoom.apply(this,arguments);}function handleDeleteQuestion(_x){return _handleDeleteQuestion.apply(this,arguments);}function _handleDeleteQuestion(){_handleDeleteQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.confirm('Tem certeza que você deseja excluir essa pergunta?')){_context2.next=3;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).remove();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleDeleteQuestion.apply(this,arguments);}function handleCheckQuestionAsAnswered(_x2){return _handleCheckQuestionAsAnswered.apply(this,arguments);}function _handleCheckQuestionAsAnswered(){_handleCheckQuestionAsAnswered=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(questionId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:true});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _handleCheckQuestionAsAnswered.apply(this,arguments);}function handleHighlightQuestion(_x3){return _handleHighlightQuestion.apply(this,arguments);}function _handleHighlightQuestion(){_handleHighlightQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(questionId){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighLighted:true});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _handleHighlightQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"Letmeask\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RoomCode,{code:roomId}),/*#__PURE__*/_jsx(Button,{isOutlined:true,onClick:handleEndRoom,children:\"Encerrar sala\"})]})]})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[questions.length,\" pergunta(s)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsxs(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighLighted:question.isHighLighted,children:[!question.isAnswered&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleCheckQuestionAsAnswered(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:checkImg,alt:\"Marcar pergunta como respondida\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleHighlightQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"Dar destaque a pergunta\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleDeleteQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteImg,alt:\"Remover pergunta\"})})]},question.id);})})]})]});}","map":{"version":3,"sources":["/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/AdminRoom.tsx"],"names":["database","useHistory","useParams","Button","RoomCode","Question","useRoom","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighLighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["\nimport { database } from '../services/firebase';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\nimport checkImg from '../assets/images/check.svg'\nimport answerImg from '../assets/images/answer.svg'\n\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\n\nimport '../styles/room.scss'\nimport { Question } from '../components/Question/index';\nimport { useRoom } from '../hooks/useRoom';\n\n\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function AdminRoom() {\n    //const { user } = useAuth()\n    const history = useHistory()\n    const params = useParams<RoomParams>()\n    const roomId = params.id\n\n\n    const { title, questions } = useRoom(roomId)\n\n    async function handleEndRoom() {\n        await database.ref(`rooms/${roomId}`).update({\n            endedAt: new Date()\n        })\n\n        history.push('/')\n    }\n    \n    async function handleDeleteQuestion(questionId: string) {\n        if(window.confirm('Tem certeza que você deseja excluir essa pergunta?')){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n        }\n    }\n\n    async function handleCheckQuestionAsAnswered(questionId: string){\n        await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n            isAnswered: true\n        })\n    }\n\n    async function handleHighlightQuestion(questionId: string){\n        await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n            isHighLighted: true\n        })\n    }\n\n    return (\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutlined onClick={handleEndRoom}>Encerrar sala</Button>\n                    </div>\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    { questions.length > 0 && <span>{ questions.length } pergunta(s)</span> }\n                </div>\n\n                \n                <div className=\"question-list\">\n                    {questions.map(question => {\n                        return (\n                            <Question\n                                key={question.id} \n                                content={question.content} \n                                author={question.author}\n                                isAnswered={question.isAnswered}\n                                isHighLighted={question.isHighLighted}\n                            >\n                                {!question.isAnswered && (\n                                    <>\n                                        <button\n                                        type=\"button\"\n                                        onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                                        >\n                                            <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\n                                        </button>\n\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => handleHighlightQuestion(question.id)}\n                                        >\n                                            <img src={answerImg} alt=\"Dar destaque a pergunta\" />\n                                        </button>\n                                    </>\n                                )}\n\n                                <button\n                                    type=\"button\"\n                                    onClick={() => handleDeleteQuestion(question.id)}\n                                >\n                                    <img src={deleteImg} alt=\"Remover pergunta\" />\n                                </button>\n                            </Question>\n                        \n                        )\n                    })}\n                </div>\n            </main>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}