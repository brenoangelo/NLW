{"ast":null,"code":"var _jsxFileName = \"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useAuth } from '../hooks/useAuth';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { Question } from '../components/Question/index';\nimport { useRoom } from '../hooks/useRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const [newQuestion, setNewQuestion] = useState('');\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighLighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  async function handleLikeQuestion(questionId) {\n    const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n      authorId: user === null || user === void 0 ? void 0 : user.id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 61\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"like-button\",\n              type: \"button\",\n              \"aria-label\": \"Marcar como gostei\",\n              onClick: () => handleLikeQuestion(question.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.likeCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\",\n                  stroke: \"#737380\",\n                  strokeWidth: \"1.5\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"RK+3moE3apZTA9vcdU/SJN/uLvo=\", false, function () {\n  return [useAuth, useParams, useRoom];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Room.tsx"],"names":["useAuth","useState","useParams","Button","RoomCode","database","Question","useRoom","Room","user","newQuestion","setNewQuestion","params","roomId","id","title","questions","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighLighted","isAnswered","ref","push","handleLikeQuestion","questionId","newLike","authorId","logoImg","length","target","value","map","likeCount"],"mappings":"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","sourcesContent":["import { useAuth } from '../hooks/useAuth';\r\n\r\nimport { useState, FormEvent } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\n\r\nimport '../styles/room.scss'\r\nimport { database } from '../services/firebase';\r\nimport { Question } from '../components/Question/index';\r\nimport { useRoom } from '../hooks/useRoom';\r\n\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\nexport function Room() {\r\n    const { user } = useAuth()\r\n    const [newQuestion, setNewQuestion] = useState('')\r\n    const params = useParams<RoomParams>()\r\n    const roomId = params.id\r\n\r\n\r\n    const { title, questions } = useRoom(roomId)\r\n    \r\n\r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault()\r\n\r\n      \r\n        if(newQuestion.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        if(!user){\r\n            throw new Error('You must be logged in')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user.name,\r\n                avatar: user.avatar\r\n            },\r\n            isHighLighted: false,\r\n            isAnswered: false\r\n        }\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question)\r\n        setNewQuestion('')\r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string){\r\n        const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\r\n            authorId: user?.id,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <RoomCode code={roomId}/>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                    { questions.length > 0 && <span>{ questions.length } pergunta(s)</span> }\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                        placeholder=\"O que você quer perguntar?\"\r\n                        onChange={event => setNewQuestion(event.target.value)}\r\n                        value={newQuestion}\r\n                    />\r\n\r\n                    <div className=\"form-footer\">\r\n                        { user ? (\r\n                            <div className=\"user-info\">\r\n                                <img src={user.avatar} alt={user.name} />\r\n                                <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n                        )}\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question\r\n                                key={question.id} \r\n                                content={question.content} \r\n                                author={question.author}\r\n                            >\r\n                                <button\r\n                                    className=\"like-button\"\r\n                                    type=\"button\"\r\n                                    aria-label=\"Marcar como gostei\"\r\n                                    onClick={() => handleLikeQuestion(question.id)}\r\n                                >   \r\n                                    <span>{question.likeCount}</span>\r\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    </svg>\r\n                                </button>\r\n                            </Question>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}