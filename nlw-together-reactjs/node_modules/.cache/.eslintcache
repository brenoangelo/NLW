[{"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/index.tsx":"1","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/services/firebase.ts":"2","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/App.tsx":"3","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/NewRoom.tsx":"4","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Room.tsx":"5","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Home.tsx":"6","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/contexts/AuthContext.tsx":"7","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/hooks/useAuth.ts":"8","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/RoomCode.tsx":"9","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/Button.tsx":"10","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/Question/index.tsx":"11","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/hooks/useRoom.ts":"12","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/AdminRoom.tsx":"13"},{"size":259,"mtime":1630882383603,"results":"14","hashOfConfig":"15"},{"size":657,"mtime":1630932639379,"results":"16","hashOfConfig":"15"},{"size":714,"mtime":1633551887996,"results":"17","hashOfConfig":"15"},{"size":2182,"mtime":1631375741803,"results":"18","hashOfConfig":"15"},{"size":5450,"mtime":1633875098180,"results":"19","hashOfConfig":"15"},{"size":2626,"mtime":1633712523331,"results":"20","hashOfConfig":"15"},{"size":1866,"mtime":1631908267947,"results":"21","hashOfConfig":"15"},{"size":187,"mtime":1630963460642,"results":"22","hashOfConfig":"15"},{"size":548,"mtime":1631400598600,"results":"23","hashOfConfig":"15"},{"size":398,"mtime":1633641666541,"results":"24","hashOfConfig":"15"},{"size":874,"mtime":1633874525513,"results":"25","hashOfConfig":"15"},{"size":1876,"mtime":1633710658859,"results":"26","hashOfConfig":"15"},{"size":4237,"mtime":1633874697304,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hspqcj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/index.tsx",[],["56","57"],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/services/firebase.ts",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/App.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/NewRoom.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Room.tsx",["58","59"],"import { useAuth } from '../hooks/useAuth';\r\n\r\nimport { useState, FormEvent } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\n\r\nimport '../styles/room.scss'\r\nimport { database } from '../services/firebase';\r\nimport { Question } from '../components/Question/index';\r\nimport { useRoom } from '../hooks/useRoom';\r\n\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\nexport function Room() {\r\n    const { user } = useAuth()\r\n    const [newQuestion, setNewQuestion] = useState('')\r\n    const params = useParams<RoomParams>()\r\n    const roomId = params.id\r\n\r\n\r\n    const { title, questions } = useRoom(roomId)\r\n    \r\n\r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault()\r\n\r\n      \r\n        if(newQuestion.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        if(!user){\r\n            throw new Error('You must be logged in')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user.name,\r\n                avatar: user.avatar\r\n            },\r\n            isHighLighted: false,\r\n            isAnswered: false\r\n        }\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question)\r\n        setNewQuestion('')\r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string, likeId: string | undefined){\r\n        if (likeId){\r\n            const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\r\n    \r\n        } else {\r\n            const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\r\n                authorId: user?.id,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <RoomCode code={roomId}/>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                    { questions.length > 0 && <span>{ questions.length } pergunta(s)</span> }\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                        placeholder=\"O que você quer perguntar?\"\r\n                        onChange={event => setNewQuestion(event.target.value)}\r\n                        value={newQuestion}\r\n                    />\r\n\r\n                    <div className=\"form-footer\">\r\n                        { user ? (\r\n                            <div className=\"user-info\">\r\n                                <img src={user.avatar} alt={user.name} />\r\n                                <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n                        )}\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question\r\n                                key={question.id} \r\n                                content={question.content} \r\n                                author={question.author}\r\n                                isAnswered={question.isAnswered}\r\n                                isHighLighted={question.isHighLighted}\r\n                            >\r\n                                { !question.isAnswered && (\r\n                                    <button\r\n                                    className={`like-button ${question.likeId ? 'liked' : ''}`}\r\n                                    type=\"button\"\r\n                                    aria-label=\"Marcar como gostei\"\r\n                                    onClick={() => handleLikeQuestion(question.id, question.likeId)}\r\n                                    >   \r\n                                        { question.likeCount > 0 && <span>{question.likeCount}</span> }\r\n                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                ) }\r\n                            </Question>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}","/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/Home.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/contexts/AuthContext.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/hooks/useAuth.ts",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/RoomCode.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/Button.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/components/Question/index.tsx",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/hooks/useRoom.ts",[],"/home/brenoangelo/Documents/rocketseat/nwl-together-reactjs/letmeask/src/pages/AdminRoom.tsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":59,"column":19,"nodeType":"66","messageId":"67","endLine":59,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":62,"column":19,"nodeType":"66","messageId":"67","endLine":62,"endColumn":26},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'newLike' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]